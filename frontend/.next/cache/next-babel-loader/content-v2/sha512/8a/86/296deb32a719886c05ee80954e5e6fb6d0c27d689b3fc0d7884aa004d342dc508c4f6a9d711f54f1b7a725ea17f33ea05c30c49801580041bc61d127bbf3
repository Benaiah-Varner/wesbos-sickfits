{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query singleOrder($id: ID!) {\\n    order: Order(where: { id: $id }) {\\n      id\\n      charge\\n      total\\n      user {\\n          id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItemStyles from '../../components/styles/OrderItemStyles';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Head from 'next/head';\nvar ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrdersPage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var query = _ref.query;\n  console.log(query.id);\n\n  var _useQuery = useQuery(ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n  var order = data.order;\n  var items = order.items;\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Order details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sick Fits - Your Order details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), items.map(function (item, idx) {\n      return /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SingleOrdersPage, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrdersPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrdersPage\");","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js"],"names":["gql","useQuery","OrderStyles","OrderItemStyles","ErrorMessage","Head","ORDER_QUERY","SingleOrdersPage","query","console","log","id","variables","data","loading","error","order","items","map","item","idx","name","photo","image","publicUrlTransformed"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,WAAW,GAAGN,GAAH,mBAAjB;AAyBA,eAAe,SAASO,gBAAT,OAAmC;AAAA;;AAAA;;AAAA,MAARC,KAAQ,QAARA,KAAQ;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;;AAD8C,kBAEbV,QAAQ,CAACK,WAAD,EAAc;AACnDM,IAAAA,SAAS,EAAE;AACPD,MAAAA,EAAE,EAAEH,KAAK,CAACG;AADH;AADwC,GAAd,CAFK;AAAA,MAEtCE,IAFsC,aAEtCA,IAFsC;AAAA,MAEhCC,OAFgC,aAEhCA,OAFgC;AAAA,MAEvBC,KAFuB,aAEvBA,KAFuB;;AAQ9C,MAAGD,OAAH,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGC,KAAH,EAAU;AACN,wBAAO,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAd6C,MAgBtCC,KAhBsC,GAgB5BH,IAhB4B,CAgBtCG,KAhBsC;AAiB9C,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEF,sBACI,QAAC,WAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQQA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP,EAAe;AACxB,0BAAO,QAAC,eAAD;AAAA,gCACF;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,iBADE,eAEF;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AAAiD,UAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,iBAFE;AAAA,SAAsBJ,GAAtB;AAAA;AAAA;AAAA;AAAA,eAAP;AAIA,KALD,CARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBD;;GAtCuBb,gB;UAEaN,Q;;;KAFbM,gB;AAsCvB","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItemStyles from '../../components/styles/OrderItemStyles';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Head from 'next/head';\n\nconst ORDER_QUERY = gql`\n  query singleOrder($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n          id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleOrdersPage({query}) {\n    console.log(query.id);\n    const { data, loading, error } = useQuery(ORDER_QUERY, {\n        variables: {\n            id: query.id\n        }\n    })\n\n    if(loading) {\n        return <p>Loading...</p>\n    }\n\n    if(error) {\n        return <ErrorMessage error={error} />\n    }\n\n    const { order } = data\n    const items = order.items\n    console.log(items);\n\n  return (\n      <OrderStyles>\n          <h1>Your Order details</h1>\n          <Head>\n              <title>\n                  Sick Fits - Your Order details\n              </title>\n          </Head>\n          {\n              items.map((item, idx) => {\n               return <OrderItemStyles key={idx}>\n                    <h3>{item.name}</h3>\n                    <img src={item.photo.image.publicUrlTransformed} alt=\"\"/>\n                </OrderItemStyles>\n              })\n          }\n      </OrderStyles>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}