{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItemStyles from '../../components/styles/OrderItemStyles';\nconst ORDER_QUERY = gql`\n  query singleOrder($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n          id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function SingleOrdersPage({\n  query\n}) {\n  console.log(query.id);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  const items = data.order.items;\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Order details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), items.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js"],"names":["gql","useQuery","OrderStyles","OrderItemStyles","ORDER_QUERY","SingleOrdersPage","query","console","log","id","data","loading","error","variables","items","order","map","item","idx","name","photo","image","publicUrlTransformed"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AAGA,MAAMC,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,eAAe,SAASK,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAmC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACG,WAAD,EAAc;AACnDS,IAAAA,SAAS,EAAE;AACPJ,MAAAA,EAAE,EAAEH,KAAK,CAACG;AADH;AADwC,GAAd,CAAzC;AAMA,QAAMK,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWD,KAAzB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACF,sBACI,QAAC,WAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQA,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,0BAAO,QAAC,eAAD;AAAA,gCACF;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,CAAWC,KAAX,CAAiBC,oBAA3B;AAAiD,UAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFE;AAAA,SAAsBJ,GAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAIA,KALD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;AAAA","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItemStyles from '../../components/styles/OrderItemStyles';\n\n\nconst ORDER_QUERY = gql`\n  query singleOrder($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      charge\n      total\n      user {\n          id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleOrdersPage({query}) {\n    console.log(query.id);\n    const { data, loading, error } = useQuery(ORDER_QUERY, {\n        variables: {\n            id: query.id\n        }\n    })\n\n    const items = data.order.items\n    console.log(items);\n  return (\n      <OrderStyles>\n          <h1>Your Order details</h1>\n          {\n              items.map((item, idx) => {\n               return <OrderItemStyles key={idx}>\n                    <h3>{item.name}</h3>\n                    <img src={item.photo.image.publicUrlTransformed} alt=\"\"/>\n                </OrderItemStyles>\n              })\n          }\n      </OrderStyles>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}