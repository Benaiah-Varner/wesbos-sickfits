{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Products.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Products() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS);\n  console.log(data, loading, error);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allProducts.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS","Products","data","error","loading","console","log","message","allProducts","map","product"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,eAAe,SAASE,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACE,YAAD,CAAzC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBE,OAAlB,EAA2BD,KAA3B;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE;AAAA,gBACGL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,IAAa;AACjC,4BAAO;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst ALL_PRODUCTS = gql`\n  query ALL_PRODUCTS {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Products() {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS);\n  console.log(data, loading, error);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <div>\n        {data.allProducts.map((product) => {\n          return <p></p>;\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}