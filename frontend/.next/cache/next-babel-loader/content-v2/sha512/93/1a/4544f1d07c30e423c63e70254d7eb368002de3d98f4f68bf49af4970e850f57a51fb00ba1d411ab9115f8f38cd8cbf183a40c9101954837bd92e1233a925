{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\\n        updateProduct(\\n            id: $id,\\n            data: {\\n            id \\n            name \\n            description \\n            price \\n            }\\n        )\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id: ID!){\\n        Product(where: { id: $id }) {\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Update \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UpdateProduct, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","gql","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAWA,IAAME,uBAAuB,GAAGF,GAAH,oBAA7B;;AAcA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACGL,QAAQ,CAACE,oBAAD,EAAuB;AAC7DI,IAAAA,SAAS,EAAE;AAACD,MAAAA,EAAE,EAAFA;AAAD;AADkD,GAAvB,CADX;AAAA,MACtBE,IADsB,aACtBA,IADsB;AAAA,MAChBC,KADgB,aAChBA,KADgB;AAAA,MACTC,OADS,aACTA,OADS;;AAI9BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBACI;AAAA,0BACYF,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAVD;;GAAMD,a;UAC+BJ,Q;;;KAD/BI,a;AAYN,eAAeA,aAAf","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: { id: $id }) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\n        updateProduct(\n            id: $id,\n            data: {\n            id \n            name \n            description \n            price \n            }\n        )\n    }\n`;\n\nconst UpdateProduct = ({ id }) => {\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n       variables: {id}, \n    })\n    console.log(data)\n    return (\n        <div>\n            Update {id}\n        </div>\n    )\n}\n\nexport default UpdateProduct\n"]},"metadata":{},"sourceType":"module"}