{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Pagination';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n\n    // tells appollo we will take care of everything\n    read(existing = [], {\n      args,\n      cache\n    }) {\n      console.log({\n        existing,\n        args,\n        cache\n      });\n      const {\n        skip,\n        first\n      } = args; // read number of items from cache\n\n      const data = cache.readQuery({\n        query: PAGINATION_QUERY\n      }); //first thing apollo does is ask the read function for those items\n      // we can do 1 of 2 things\n      //return items in cache\n      // return false from here, make another network request\n    },\n\n    merg() {}\n\n  };\n}","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","console","log","skip","first","data","readQuery","query","merg"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,0BAA/B;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;;AACW;AAChBC,IAAAA,IAAI,CAACC,QAAQ,GAAG,EAAZ,EAAgB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhB,EAAiC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA,QAAF;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA;AAAlB,OAAZ;AACA,YAAM;AAAEG,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBL,IAAxB,CAFiC,CAInC;;AACA,YAAMM,IAAI,GAAGL,KAAK,CAACM,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb;AAAT,OAAhB,CAAb,CALmC,CAMnC;AACA;AACA;AACA;AACD,KAZI;;AAaLc,IAAAA,IAAI,GAAG,CAAE;;AAbJ,GAAP;AAeD","sourcesContent":["import {PAGINATION_QUERY} from '../components/Pagination';\n\nexport default function paginationField() {\n  return {\n    keyArgs: false, // tells appollo we will take care of everything\n    read(existing = [], { args, cache }) {\n        console.log({ existing, args, cache });\n        const { skip, first } = args;\n    \n      // read number of items from cache\n      const data = cache.readQuery({ query: PAGINATION_QUERY })\n      //first thing apollo does is ask the read function for those items\n      // we can do 1 of 2 things\n      //return items in cache\n      // return false from here, make another network request\n    },\n    merg() {},\n  };\n}\n"]},"metadata":{},"sourceType":"module"}