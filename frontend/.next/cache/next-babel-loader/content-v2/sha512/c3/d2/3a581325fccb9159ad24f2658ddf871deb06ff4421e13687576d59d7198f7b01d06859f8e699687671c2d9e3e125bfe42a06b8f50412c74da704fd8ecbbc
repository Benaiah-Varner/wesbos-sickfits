{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/Orders.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`;\n\nconst CountItemsInAnOrder = order => {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n};\n\nexport default function OrdersPage() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(USER_ORDERS_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    allOrders\n  } = data;\n  console.log(allOrders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Your Orders (\", allOrders.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(order => {\n        /*#__PURE__*/\n        _jsxDEV(OrderItemStyles, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: `/order/${order.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [CountItemsInAnOrder(order), \" Items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [order.items.length, \" Product\", order.items.length === 1 ? '' : 's']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"images\",\n              children: order.items.map(item => {\n                var _item$photo, _item$photo$image;\n\n                /*#__PURE__*/\n                _jsxDEV(\"img\", {\n                  src: (_item$photo = item.photo) === null || _item$photo === void 0 ? void 0 : (_item$photo$image = _item$photo.image) === null || _item$photo$image === void 0 ? void 0 : _item$photo$image.publicUrlTransformed,\n                  alt: item.name\n                }, `image-${item.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/Orders.js"],"names":["gql","useQuery","OrderStyles","OrderItemStyles","ErrorMessage","Head","Link","formatMoney","styled","USER_ORDERS_QUERY","OrderUl","div","CountItemsInAnOrder","order","items","reduce","tally","item","quantity","OrdersPage","data","loading","error","allOrders","console","log","length","map","id","total","photo","image","publicUrlTransformed","name"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst OrderUl = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`;\n\nconst CountItemsInAnOrder = (order) => {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n};\n\nexport default function OrdersPage() {\n  const { data, loading, error } = useQuery(USER_ORDERS_QUERY);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n  const { allOrders } = data;\n  console.log(allOrders);\n\n  return (\n    <div>\n      <Head>\n        <title>Your Orders ({allOrders.length})</title>\n      </Head>\n      <h2>You have {allOrders.length} orders!</h2>\n      <OrderUl>\n        {allOrders.map((order) => {\n\n          (<OrderItemStyles>\n            <Link href={`/order/${order.id}`}>\n              <div className=\"order-meta\">\n                <p>{CountItemsInAnOrder(order)} Items</p>\n                <p>\n                  {order.items.length} Product\n                  {order.items.length === 1 ? '' : 's'}\n                </p>\n                <p>{formatMoney(order.total)}</p>\n              </div>\n              <div className=\"images\">\n                {order.items.map((item) => {\n                  <img\n                    key={`image-${item.id}`}\n                    src={item.photo?.image?.publicUrlTransformed}\n                    alt={item.name}\n                  />;\n                })}\n              </div>\n            </Link>\n          </OrderItemStyles>)\n        })}\n      </OrderUl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}