{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport nProgress from 'nprogress';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var elements = useElements();\n  var stripe = useStripe();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true); // need to stop the form from submitting and turn the loader on\n              // start the page transistion\n\n              nProgress.start(); // create the payment method via stripe, return an token on sucess\n              // handle any errors from stripe\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod);\n\n              if (error) {\n                setError(error);\n              }\n\n              setLoading(false); // send the token from step 3 to keystone via custom mutation\n              // change the page to view the order\n              // change page view to order\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"lUe7mFojcu9axq9SZQrbEIksU4I=\", false, function () {\n  return [useElements, useStripe];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport default Checkout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","SickButton","useState","useStripe","nProgress","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","elements","stripe","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","fontSize","message","Checkout"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,QAAmD,yBAAnD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,IAAMC,kBAAkB,GAAGT,MAAM,CAACU,IAAV;AAAA;AAAA;AAAA,8IAAxB;KAAMD,kB;AASN,IAAME,SAAS,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACIT,QAAQ,EADZ;AAAA,MACfU,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEfY,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,MAAM,GAAGd,SAAS,EAAxB;;AAEA,MAAMe,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACAL,cAAAA,UAAU,CAAC,IAAD,CAAV,CAFmB,CAGnB;AACA;;AACAX,cAAAA,SAAS,CAACiB,KAAV,GALmB,CAMnB;AACA;;AAPmB;AAAA,qBAQoBJ,MAAM,CAACK,mBAAP,CAA2B;AAChEC,gBAAAA,IAAI,EAAE,MAD0D;AAEhEC,gBAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB3B,WAApB;AAF0D,eAA3B,CARpB;;AAAA;AAAA;AAQXc,cAAAA,KARW,yBAQXA,KARW;AAQJc,cAAAA,aARI,yBAQJA,aARI;AAYnBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AACA,kBAAId,KAAJ,EAAW;AACPC,gBAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AACDG,cAAAA,UAAU,CAAC,KAAD,CAAV,CAhBmB,CAiBnB;AACA;AACA;;AAnBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZG,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAsBA,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEA,YAA9B;AAAA,eACKN,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEiB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAAiCjB,KAAK,CAACkB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADd,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnCQnB,Y;UAGUX,W,EACFG,S;;;MAJRQ,Y;;AAqCT,SAASoB,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAExB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQwB,Q;AAQT,eAAeA,QAAf","sourcesContent":["import styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport nProgress from 'nprogress';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // need to stop the form from submitting and turn the loader on\n    // start the page transistion\n    nProgress.start();\n    // create the payment method via stripe, return an token on sucess\n    // handle any errors from stripe\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    if (error) {\n        setError(error);\n    }\n    setLoading(false)\n    // send the token from step 3 to keystone via custom mutation\n    // change the page to view the order\n    // change page view to order\n  };\n\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n        {error && <p style={{ fontSize: \"12px\" }}>{error.message}</p>}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}