{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Form from './styles/';\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: { id: $id }) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\n        updateProduct(\n            id: $id,\n            data: {\n            id: $id,\n            name: $name,\n            description: $description,\n            price: $price\n            }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UpdateProduct = ({\n  id\n}) => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id // pass in product updates here\n\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); // Submit the inputfields to the backend:\n\n      const res = await createProduct();\n      clearForm(); // Go to that product's page!\n\n      Router.push({\n        pathname: `/product/${res.data.createProduct.id}`\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\nexport default UpdateProduct;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","useMutation","gql","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","updateProduct","updateData","updateError","updateLoading","e","preventDefault","res","createProduct","clearForm","Router","push","pathname","handleChange","inputs","name","price","description"],"mappings":"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","sourcesContent":["import { useQuery, useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport Form from './styles/'\n\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: { id: $id }) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\n        updateProduct(\n            id: $id,\n            data: {\n            id: $id,\n            name: $name,\n            description: $description,\n            price: $price\n            }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UpdateProduct = ({ id }) => {\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n       variables: {id}, \n    })\n\n    const [updateProduct, {data: updateData, error: updateError, loading: updateLoading}] = useMutation(UPDATE_PRODUCT_MUTATION, {\n        variables: {\n            id: id\n            // pass in product updates here\n        }\n    })\n    return (\n        <Form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        // Submit the inputfields to the backend:\n        const res = await createProduct();\n        clearForm();\n        // Go to that product's page!\n        Router.push({\n          pathname: `/product/${res.data.createProduct.id}`,\n        });\n      }}\n    >\n      <DisplayError error={error} />\n      <fieldset disabled={loading} aria-busy={loading}>\n        <label htmlFor=\"image\">\n          Image\n          <input\n            required\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            \n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            required\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            required\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">+ Add Product</button>\n      </fieldset>\n    </Form>\n    )\n}\n\nexport default UpdateProduct\n"]},"metadata":{},"sourceType":"module"}