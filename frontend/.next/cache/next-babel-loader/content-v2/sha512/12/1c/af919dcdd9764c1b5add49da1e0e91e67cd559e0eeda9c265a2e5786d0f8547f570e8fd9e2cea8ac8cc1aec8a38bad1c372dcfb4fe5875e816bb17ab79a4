{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\\n        updateProduct(\\n            id: $id,\\n            data: {\\n            id: $id,\\n            name: $name,\\n            description: $description,\\n            price: $price\\n            }\\n        ) {\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_PRODUCT_QUERY($id: ID!){\\n        Product(where: { id: $id }) {\\n            id\\n            name\\n            description\\n            price\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id // pass in product updates here\n\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Update \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UpdateProduct, \"dNIYSjKX3qpe++IUISBM8iIOLro=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","useMutation","gql","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAWA,IAAME,uBAAuB,GAAGF,GAAH,oBAA7B;;AAmBA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACGN,QAAQ,CAACG,oBAAD,EAAuB;AAC7DI,IAAAA,SAAS,EAAE;AAACD,MAAAA,EAAE,EAAFA;AAAD;AADkD,GAAvB,CADX;AAAA,MACtBE,IADsB,aACtBA,IADsB;AAAA,MAChBC,KADgB,aAChBA,KADgB;AAAA,MACTC,OADS,aACTA,OADS;;AAAA,qBAK0DT,WAAW,CAACG,uBAAD,EAA0B;AACzHG,IAAAA,SAAS,EAAE;AACPD,MAAAA,EAAE,EAAEA,EADG,CAEP;;AAFO;AAD8G,GAA1B,CALrE;AAAA;AAAA,MAKvBK,aALuB;AAAA;AAAA,MAKDC,UALC,kBAKPJ,IALO;AAAA,MAKkBK,WALlB,kBAKWJ,KALX;AAAA,MAKwCK,aALxC,kBAK+BJ,OAL/B;;AAW9B,sBACI;AAAA,0BACYJ,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAhBD;;GAAMD,a;UAC+BL,Q,EAIuDC,W;;;KALtFI,a;AAkBN,eAAeA,aAAf","sourcesContent":["import { useQuery, useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nconst SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!){\n        Product(where: { id: $id }) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION($id: ID! $name: String $description: String $price: Int) {\n        updateProduct(\n            id: $id,\n            data: {\n            id: $id,\n            name: $name,\n            description: $description,\n            price: $price\n            }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\n\nconst UpdateProduct = ({ id }) => {\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n       variables: {id}, \n    })\n\n    const [updateProduct, {data: updateData, error: updateError, loading: updateLoading}] = useMutation(UPDATE_PRODUCT_MUTATION, {\n        variables: {\n            id: id\n            // pass in product updates here\n        }\n    })\n    return (\n        <div>\n            Update {id}\n        </div>\n    )\n}\n\nexport default UpdateProduct\n"]},"metadata":{},"sourceType":"module"}