{"ast":null,"code":"import _toArray from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _defineProperty from \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\n\nvar useForm = function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === \"number\") {\n      value = parseInt(value);\n    }\n\n    if (type === \"file\") {\n      value[0] = e.target.files;\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  };\n\n  var resetForm = function resetForm() {\n    setInputs(initial);\n  };\n\n  var clearForm = function clearForm() {\n    var blankState = Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _toArray(_ref);\n    });\n  };\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange\n  };\n};\n\n_s(useForm, \"0tjT+aoDVbAe0wsQZsq9AKLCE20=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","value","name","type","parseInt","files","resetForm","clearForm","blankState","Object","entries","map"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkB;AAAA;;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAAA,kBACJF,QAAQ,CAACE,OAAD,CADJ;AAAA,MACzBC,MADyB;AAAA,MACjBC,SADiB;;AAGhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACEA,CAAC,CAACC,MADJ;AAAA,QACpBC,KADoB,aACpBA,KADoB;AAAA,QACbC,IADa,aACbA,IADa;AAAA,QACPC,IADO,aACPA,IADO;;AAE1B,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnBF,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWF,CAAC,CAACC,MAAF,CAASK,KAApB;AACD;;AACDR,IAAAA,SAAS,iCACJD,MADI,2BAENM,IAFM,EAECD,KAFD,GAAT;AAID,GAZD;;AAcA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBT,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH,GAFD;;AAIA,MAAMY,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAed,MAAf,EAAuBe,GAAvB,CAA2B,gBAAQ;AAAA;AAErD,KAFkB,CAAnB;AAGH,GAJD;;AAMA,SAAO;AACLf,IAAAA,MAAM,EAANA,MADK;AAELE,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID,CA/BD;;GAAMJ,O;;AAiCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initial = {}) => {\n  const [inputs, setInputs] = useState(initial);\n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n    if (type === \"number\") {\n      value = parseInt(value);\n    }\n    if (type === \"file\") {\n      value[0] = e.target.files;\n    }\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n  \n  const resetForm = () => {\n      setInputs(initial)\n  }\n\n  const clearForm = () => {\n      const blankState = Object.entries(inputs).map(([]) => {\n\n      })\n  }\n\n  return {\n    inputs,\n    handleChange,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}