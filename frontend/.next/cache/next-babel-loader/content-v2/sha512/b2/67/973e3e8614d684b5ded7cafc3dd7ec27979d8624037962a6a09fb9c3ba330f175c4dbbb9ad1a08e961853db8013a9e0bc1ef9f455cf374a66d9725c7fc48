{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\n\nconst useForm = (initial = {}) => {\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState(initial);\n\n  const handleChange = e => {\n    let {\n      value,\n      name,\n      type\n    } = e.target;\n\n    if (type === \"number\") {\n      value = parseInt(value);\n    }\n\n    if (type === \"file\") {\n      [value] = e.target.files;\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  };\n\n  const resetForm = () => {\n    setInputs(initial);\n  };\n\n  const clearForm = () => {\n    const blankState = Object.fromEntries(Object.entries(inputs).map(([key, value]) => {\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  };\n\n  return {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","value","name","type","target","parseInt","files","resetForm","clearForm","blankState","Object","fromEntries","entries","map","key"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB;AAChC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAACE,OAAD,CAApC;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAI;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBH,CAAC,CAACI,MAA9B;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGI,QAAQ,CAACJ,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnB,OAACF,KAAD,IAAUD,CAAC,CAACI,MAAF,CAASE,KAAnB;AACD;;AACDR,IAAAA,SAAS,iCACJD,MADI;AAEP,OAACK,IAAD,GAAQD;AAFD,OAAT;AAID,GAZD;;AAcA,QAAMM,SAAS,GAAG,MAAM;AACpBT,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH,GAFD;;AAIA,QAAMY,SAAS,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAGC,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAef,MAAf,EAAuBgB,GAAvB,CAA2B,CAAC,CAACC,GAAD,EAAMb,KAAN,CAAD,KAAkB;AACjF,aAAO,CAACa,GAAD,EAAM,EAAN,CAAP;AACD,KAFqC,CAAnB,CAAnB;AAGAhB,IAAAA,SAAS,CAACW,UAAD,CAAT;AAEH,GAND;;AAQA,SAAO;AACLZ,IAAAA,MADK;AAELE,IAAAA,YAFK;AAGLQ,IAAAA,SAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAnCD;;AAqCA,eAAeb,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initial = {}) => {\n  const [inputs, setInputs] = useState(initial);\n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n    if (type === \"number\") {\n      value = parseInt(value);\n    }\n    if (type === \"file\") {\n      [value] = e.target.files;\n    }\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n  \n  const resetForm = () => {\n      setInputs(initial)\n  }\n\n  const clearForm = () => {\n      const blankState = Object.fromEntries(Object.entries(inputs).map(([key, value]) => {\n        return [key, '']\n      }))\n      setInputs(blankState)\n      \n  }\n\n  return {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}