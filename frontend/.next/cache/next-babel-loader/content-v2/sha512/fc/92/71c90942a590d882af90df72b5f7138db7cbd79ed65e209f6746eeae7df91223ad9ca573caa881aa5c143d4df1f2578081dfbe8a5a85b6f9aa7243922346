{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Checkout.js\";\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!) {\n      checkout(token: $token) {\n        id\n        charge\n        total\n        items {\n          id\n          name\n        }\n      }\n    }\n `;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const elements = useElements();\n  const stripe = useStripe();\n  const [checkout, {\n    error: graphQlError\n  }] = useMutation(CREATE_ORDER_MUTATION);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // need to stop the form from submitting and turn the loader on\n    // start the page transistion\n\n    nProgress.start(); // create the payment method via stripe, return an token on sucess\n    // handle any errors from stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod);\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n\n    setLoading(false); // send the token from step 3 to keystone via custom mutation\n    // change the page to view the order\n    // change page view to order\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), graphQlError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      children: graphQlError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","SickButton","useState","useStripe","nProgress","gql","useMutation","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","elements","stripe","checkout","graphQlError","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","console","log","done","fontSize","message","Checkout"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,QAAmD,yBAAnD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,kBAAkB,GAAGX,MAAM,CAACY,IAAV;AAAA;AAAA;AAAA,8IAAxB;AASA,MAAMC,qBAAqB,GAAGJ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZA;AAcA,MAAMK,SAAS,GAAGb,UAAU,CAACc,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACe,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAM,CAACkB,QAAD,EAAW;AAACN,IAAAA,KAAK,EAAEO;AAAR,GAAX,IAAoChB,WAAW,CAACG,qBAAD,CAArD;;AAEA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV,CAFgC,CAGhC;AACA;;AACAd,IAAAA,SAAS,CAACsB,KAAV,GALgC,CAMhC;AACA;;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASY,MAAAA;AAAT,QAA2B,MAAMP,MAAM,CAACQ,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEX,QAAQ,CAACY,UAAT,CAAoBjC,WAApB;AAF0D,KAA3B,CAAvC;AAIAkC,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;;AACA,QAAIZ,KAAJ,EAAW;AACPC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAX,MAAAA,SAAS,CAAC8B,IAAV;AACA;AACH;;AACDhB,IAAAA,UAAU,CAAC,KAAD,CAAV,CAlBgC,CAmBhC;AACA;AACA;AACD,GAtBD;;AAwBA,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEK,YAA9B;AAAA,eACKR,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEoB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAAiCpB,KAAK,CAACqB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADd,EAEKd,YAAY,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAAiCb,YAAY,CAACc;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFrB,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,SAASC,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAE3B,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAe2B,QAAf","sourcesContent":["import styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements } from '@stripe/react-stripe-js';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!) {\n      checkout(token: $token) {\n        id\n        charge\n        total\n        items {\n          id\n          name\n        }\n      }\n    }\n `;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const elements = useElements();\n  const stripe = useStripe();\n  const [checkout, {error: graphQlError}] = useMutation(CREATE_ORDER_MUTATION);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // need to stop the form from submitting and turn the loader on\n    // start the page transistion\n    nProgress.start();\n    // create the payment method via stripe, return an token on sucess\n    // handle any errors from stripe\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    if (error) {\n        setError(error);\n        nProgress.done();\n        return;\n    }\n    setLoading(false)\n    // send the token from step 3 to keystone via custom mutation\n    // change the page to view the order\n    // change page view to order\n  };\n\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n        {error && <p style={{ fontSize: \"12px\" }}>{error.message}</p>}\n        {graphQlError && <p style={{ fontSize: \"12px\" }}>{graphQlError.message}</p>}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}