{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItems from '../../components/styles/OrderItems';\nconst ORDER_QUERY = gql`\n  query singleOrder($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      items {\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function SingleOrdersPage({\n  query\n}) {\n  console.log(query.id);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  console.log(data, loading, error);\n  const items = data.items;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Order details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), items.map(item => {})]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/pages/order/[id].js"],"names":["gql","useQuery","OrderStyles","OrderItems","ORDER_QUERY","SingleOrdersPage","query","console","log","id","data","loading","error","variables","items","map","item"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AAGA,MAAMC,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,eAAe,SAASK,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAmC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACG,WAAD,EAAc;AACnDS,IAAAA,SAAS,EAAE;AACPJ,MAAAA,EAAE,EAAEH,KAAK,CAACG;AADH;AADwC,GAAd,CAAzC;AAKAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAkBC,OAAlB,EAA2BC,KAA3B;AACA,QAAME,KAAK,GAAGJ,IAAI,CAACI,KAAnB;AACF,sBACI,QAAC,WAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,CAEjB,CAFD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD;AAAA","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport OrderItems from '../../components/styles/OrderItems';\n\n\nconst ORDER_QUERY = gql`\n  query singleOrder($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      items {\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleOrdersPage({query}) {\n    console.log(query.id);\n    const { data, loading, error } = useQuery(ORDER_QUERY, {\n        variables: {\n            id: query.id\n        }\n    })\n    console.log(data, loading, error);\n    const items = data.items\n  return (\n      <OrderStyles>\n          <h1>Your Order details</h1>\n          {\n              items.map(item => {\n\n              })\n          }\n      </OrderStyles>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}