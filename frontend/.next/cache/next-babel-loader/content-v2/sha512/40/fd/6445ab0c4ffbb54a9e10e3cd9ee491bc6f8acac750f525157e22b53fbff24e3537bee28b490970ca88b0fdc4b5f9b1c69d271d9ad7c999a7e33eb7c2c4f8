{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/lib/CartState.js\";\nimport { createContext, useContext, useState } from 'react';\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  //This is our own custom provider, we will store data and functionalilty in here\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(true);\n\n  const toggleCart = () => {\n    setCartOpen(!cartOpen);\n  };\n\n  const closeCart = () => {\n    setCartOpen(false);\n  };\n\n  const openCart = () => {\n    setCartOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen,\n      setCartOpen,\n      closeCart,\n      openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/Users/benaiahvarner/Documents/wesbos/advanced-react/Advanced-React/sick-fits/frontend/lib/CartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAG,MAAM;AACtBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAG,MAAM;AACrBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBE,MAAAA,SAAzB;AAAoCC,MAAAA;AAApC,KAA3B;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CAED;;;AACA,SAASM,OAAT,GAAmB;AACjB,QAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACD;;AAED,SAASR,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  //This is our own custom provider, we will store data and functionalilty in here\n\n  const [cartOpen, setCartOpen] = useState(true);\n\n  const toggleCart = () => {\n    setCartOpen(!cartOpen);\n  };\n\n  const closeCart = () => {\n    setCartOpen(false);\n  };\n\n  const openCart = () => {\n    setCartOpen(true);\n  };\n\n  return (\n    <LocalStateProvider value={{ cartOpen, setCartOpen, closeCart, openCart }}>\n      {children}\n    </LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}